# Generated by Django 4.2.5 on 2024-01-24 15:31

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='applyloan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('email', models.EmailField(default='', max_length=255)),
                ('address', models.CharField(default='', max_length=255)),
                ('pan', models.CharField(default='', max_length=20)),
                ('aadhar', models.CharField(default='', max_length=20)),
                ('amount', models.CharField(default='', max_length=20)),
                ('tenure', models.CharField(default='', max_length=3)),
                ('loanType', models.CharField(choices=[('PERSONAL LOAN', 'personal loan'), ('HOME LOAN', 'home loan'), ('EDUCATION LOAN', 'education loan'), ('CAR LOAN', 'car loan'), ('TWO WHEELER LOAN', 'two wheeler loan'), ('GOLD LOAN', 'gold loan'), ('PROPERTY LOAN', 'property loan')], default='', max_length=20)),
                ('selected', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='depositetype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(choices=[('FIXED DEPOSIT', 'fixed deposit'), ('RECURRING DEPOSIT', 'recurring deposit'), ('NRI FIXED DEPOSIT', 'nri fixed deposit'), ('SAFE DEPOSIT LOCKER', 'safee deposit locker')], default='', max_length=20)),
                ('city', models.CharField(choices=[('AGRA', 'agra'), ('AHMEDABAD', 'ahmedabad'), ('AJMER', 'ajmer'), ('ANAND', 'anand'), ('ANKLESHWAR', 'ankleshwar'), ('BANGALORE', 'banglore'), ('BELGAUM', 'belgum'), ('BHILWARA', 'bhilwara'), ('BHOPAL', 'bhopal'), ('BIAORA', 'biaora'), ('BURHANPUR', 'burhanpur'), ('CHANDIGARH', 'chandigarh'), ('CHENNAI', 'chennai'), ('CHITTORGARH', 'chittorgarh'), ('COIMBATORE', 'coimbatore'), ('DAVANGERE', 'davangere'), ('DEHRADUN', 'dehradun'), ('DELHI NCR', 'delhi ncr'), ('DHAR', 'dhar'), ('DHARWAD', 'dharwad'), ('ERODE', 'erode'), ('GOKAK', 'gokak'), ('GUNTUR', 'guntur'), ('HARDA', 'harda'), ('HARVERI', 'harveri'), ('HIMMATNAGER', 'himmatnager'), ('HUBLI', 'hubli'), ('HYDERABAD', 'hyderabad'), ('INDORE', 'indore'), ('JAIPUR', 'jaipur'), ('JALANDHAR', 'jalandhar'), ('JAMKHANDI', 'jamkhandi'), ('JODHPUR', 'jodhpur'), ('KAKINADA', 'kakinada'), ('KANPUR', 'kanpur'), ('KHANDWA', 'khandwa'), ('KHARGAONE', 'khargaone'), ('KOCHI', 'kochi'), ('KOLKATA', 'kolkata'), ('KOTA', 'kota'), ('LUCKNOW', 'lucknow'), ('LUDHIANA', 'ludhiana'), ('MADURAI MANDSAUR', 'madurai mandsaur'), ('MORBI', 'morbi'), ('MUMBAI', 'mumbai'), ('NAGPUR', 'nagpur'), ('NASHIK', 'nashik'), ('NEEMUCH', 'neemuch'), ('PANIPAT', 'panipat'), ('PATAN', 'patan'), ('PIPARIYA', 'pipariya'), ('PUNE', 'pune'), ('RAIPUR', 'raipur'), ('RAJAHMUNDRY', 'rajamundry'), ('RAJGARH', 'rajgarh'), ('RAJKOT', 'rajkot'), ('RATLAM', 'ratlam'), ('SALEM', 'salem'), ('SANAWAD', 'sanawad'), ('SURAT', 'surat'), ('TANUKU', 'tanuku'), ('TIRUPPUR', 'tiruppur'), ('UJJAIN', 'ujjain'), ('VADODARA', 'vadodata'), ('VAPI', 'vapi'), ('VIJAYWADA', 'vijaywada'), ('VIZAG', 'vizag')], default='', max_length=20)),
                ('fullname', models.CharField(default='', max_length=100)),
                ('email', models.EmailField(default='', max_length=255)),
                ('phone', models.CharField(default='', max_length=20)),
                ('selected', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='heroImages',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('image', models.ImageField(default='default_image.jpg', upload_to='media/images/')),
            ],
        ),
        migrations.CreateModel(
            name='openaccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default='', max_length=255)),
                ('accountType', models.CharField(choices=[('SAVING ACCOUNT', 'saving account'), ('CORPORATE SALARY ACCOUNT', 'corporate salary account'), ('SENIOR CITIZEN SAVING ACCOUNT', 'senior citizen saving account'), ('CURRENT ACCOUNT', 'current account'), ('NRI SAVING ACCOUNT', 'nri saving account')], default='', max_length=100)),
                ('phone', models.CharField(default='', max_length=20)),
                ('pan', models.CharField(default='', max_length=20)),
                ('aadhar', models.CharField(default='', max_length=20)),
                ('occupation', models.CharField(choices=[('DOCTOR', 'doctor'), ('ENGINEER', 'engineer'), ('BUSINESSMAN', 'businessman'), ('CHARTERED ACCOUNTANT', 'chartered accountant'), ('STUDENT', 'student')], default='', max_length=255)),
                ('incomeSource', models.CharField(choices=[('SALARY', 'salary'), ('BUSINESS', 'business'), ('STOCKS', 'stocks'), ('POCKET MONEY', 'pocket money'), ('RENT', 'rent')], default='', max_length=20)),
                ('grossAnnualIncome', models.CharField(default='', max_length=20)),
                ('selected', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('phone', models.CharField(default='', max_length=255)),
                ('pan', models.CharField(default='', max_length=20)),
                ('aadhar', models.CharField(default='', max_length=20)),
                ('photo', models.ImageField(null=True, upload_to='user_photos/')),
                ('aadharimg', models.FileField(blank=True, null=True, upload_to='user_aadhar/')),
                ('panimg', models.FileField(blank=True, null=True, upload_to='user_pan_cards/')),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('customer', 'Customer')], default='customer', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
